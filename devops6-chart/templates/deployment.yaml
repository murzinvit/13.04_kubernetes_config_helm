---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Nane }}frontend
  namespace: devops6-app
  labels:
    name: {{ .Release.Name }}frontend
spec:
  replicas: {{ .Values.replicaCountFront }}
  selector:
    matchLabels:
      name: {{ .Release.Name }}frontend
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}frontend
    spec:
      containers:
      - name: {{ .Release.Name }}frontend
        image: {{ .Values.ContainerFront.image }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        env:
        - name: BASE_URL
          value: http://localhost:9000
        volumeMounts:
        - name: file-storage
          mountPath: /mnt
      volumes:
      - name: file-storage
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: devops6-app
  labels:
    name: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      name: backend
  template:
    metadata:
      labels:
        name: backend
    spec:
      containers:
      - name: backend
        image: murzinvit/backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
        env:
        - name: DATABASE_URL
          value: postgres://postgres:postgres@db-service:5432/news
        volumeMounts:
        - name: file-storage
          mountPath: /mnt
      volumes:
      - name: file-storage
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: devops6-app
  labels:
    name: db
spec:
  replicas: 2
  selector:
    matchLabels:
      name: db
  template:
    metadata:
      labels:
        name: db
    spec:
      containers:
      - name: db
        image: murzinvit/db:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: db-storage
          mountPath: /var/lib/
      volumes:
      - name: db-storage
        emptyDir: {}